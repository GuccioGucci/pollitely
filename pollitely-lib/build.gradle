buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'maven'
apply plugin: 'signing'

group = 'com.gucci'
archivesBaseName = "pollitely-lib"
version = '0.1.7-SNAPSHOT'

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

repositories {
    mavenLocal()
    mavenCentral()
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(
                        userName: System.getenv("SONATYPE_USERNAME") ?: project.findProperty("sonatype.username"),
                        password: System.getenv("SONATYPE_PASSWORD") ?: project.findProperty("sonatype.password")
                )
            }

            snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
                authentication(
                        userName: System.getenv("SONATYPE_USERNAME") ?: project.findProperty("sonatype.username"),
                        password: System.getenv("SONATYPE_PASSWORD") ?: project.findProperty("sonatype.password")
                )
            }

            pom.project {
                name 'Pollitely'
                description 'This is a library providing a light-weight approach for executing long-running tasks as simple HTTP request, making them not to incur in HTTP time-out. In other words, given web applications that run task such as batch processes, politelly can support making those tasks taking longer that usual HTTP timeout (typically few minutes). Reference tech stack is Kotlin / Ktor.'
                url 'https://github.com/GuccioGucci/pollitely'

                scm {
                    connection 'scm:git:https://github.com/GuccioGucci/pollitely.git'
                    developerConnection 'scm:git:https://github.com/GuccioGucci/pollitely.git'
                    url 'https://github.com/GuccioGucci/pollitely'
                }

                licenses {
                    license {
                        name 'GNU Lesser General Public License v3.0'
                        url 'https://www.gnu.org/licenses/lgpl-3.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'guccio-gucci'
                        name 'Guccio Gucci'
                        email 'infrastructure-cop@kering.onmicrosoft.com'
                    }
                }
            }
        }
    }
}

signing {
    useInMemoryPgpKeys(
            System.getenv("SIGNING_KEY") ?: findProperty("signing.key"),
            System.getenv("SIGNING_PASSWORD") ?: findProperty("signing.password")
    )
    sign(configurations.archives)
}

test {
    useJUnitPlatform()
    testLogging {
        exceptionFormat = org.gradle.api.tasks.testing.logging.TestExceptionFormat.FULL
        events = ["passed", "failed", "skipped"]
    }
}

kotlin {
    sourceSets {
        commonMain {
            dependencies {
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
            }
        }
    }
}

dependencies {

    // platform
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:$coroutine_version") {
        version {
            strictly("$coroutine_version")
        }
    }

    // ktor server
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-server-host-common:$ktor_version"
    implementation "io.ktor:ktor-jackson:$ktor_version"

    // logging
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "io.github.microutils:kotlin-logging:$microutilsKotlinLogging_version"
    implementation "org.apache.logging.log4j:log4j-core:$log4j2_version"

    // test
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_version"
    testImplementation "org.hamcrest:hamcrest-all:1.3"
    testImplementation "io.ktor:ktor-server-tests:$ktor_version"

}
